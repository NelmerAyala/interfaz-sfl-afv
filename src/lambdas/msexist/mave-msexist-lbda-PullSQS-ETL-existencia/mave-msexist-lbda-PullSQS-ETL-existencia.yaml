# Esta plantilla de AWS SAM se ha generado a partir de la configuración de su
# función. Si su función tiene uno o más desencadenadores, tenga en cuenta que los
# recursos de AWS asociados a estos desencadenadores no están completamente
# especificados en esta plantilla e incluyen valores de marcadores de posición.
# Abra esta plantilla en AWS Application Composer o en su IDE favorito y
# modifíquela para especificar una aplicación sin servidor con otros recursos de
# AWS.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  mavemsexistlbdaPullSQSETLexistencia:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: SFL-AFV | Microservicio Existencias | ETL Update
      MemorySize: 128
      Timeout: 303
      Handler: index.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          DM_NAME: mave-msexist-lbda-dm-existencia
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - arn:aws:lambda:us-east-1:490598428640:layer:mave-layer-send-event:1
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:DescribeSecret
              Resource: arn:aws:secretsmanager:*:490598428640:secret:*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - events:PutEvents
              Resource: arn:aws:events:us-east-1:490598428640:event-bus/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:ReceiveMessage
                - sqs:SendMessage
                - sqs:GetQueueAttributes
              Resource: '*'
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DeleteNetworkInterface
                - ec2:DescribeNetworkInterfaces
              Resource: '*'
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:us-east-1:490598428640:*
            - Sid: AWSLambdaVPCAccessExecutionPermissions
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribeSubnets
                - ec2:DeleteNetworkInterface
                - ec2:AssignPrivateIpAddresses
                - ec2:UnassignPrivateIpAddresses
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - s3:*
                - s3-object-lambda:*
              Resource: '*'
      SnapStart:
        ApplyOn: None
      Events:
        SQS1:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
                - SQSQueue1
                - Arn
            BatchSize: 100
        SQS2:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
                - SQSQueue2
                - Arn
            BatchSize: 100
        SQS3:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
                - SQSQueue3
                - Arn
            BatchSize: 100
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  SQSQueue1:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: SQSQueue1
      SqsManagedSseEnabled: true
  SQSQueue2:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: SQSQueue2
      SqsManagedSseEnabled: true
  SQSQueue3:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: SQSQueue3
      SqsManagedSseEnabled: true
